{"version":3,"sources":["components/Navigation/navbar.js","components/Login/login.js","components/Footer/footer.js","components/Register/register.js","components/Dashboard_header/dashboard-header.js","components/Leave-Card/leave_card.js","components/Dashboard/dashboard.js","components/Request_leave/request_leave.js","components/Leave_status/leave-status.js","components/BackButton/backbutton.js","App.js","serviceWorker.js","index.js"],"names":["navbar","_ref","onRouteChange","isSignedIn","first_name","react_default","a","createElement","className","href","data-toggle","data-target","id","onClick","fetch","method","headers","Content-Type","Authorization","window","sessionStorage","getItem","then","response","json","user","success","removeItem","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSigIn","body","JSON","stringify","email","state","password","setItem","token","loadUser","data","htmlFor","type","aria-describedby","placeholder","onChange","React","Component","footer","Register","onFirstNameChange","firstName","onLastNameChange","lastName","onPositionChange","position","onConfirmPasswordChange","confirm_password","onRegisterSubmit","last_name","password2","console","log","header","Leave_card","onAvailableLeaves","user_id","concat","leaveTotal","applied","count","rejected","_this$state","Dashboard","onColorChange","color","onUserLeaves","_this2","_this$props","appliedLeaves","onViewChange","userId","dashboard_header","leave_card","map","current","i","key","leave_type","leave_status","RequestLeave","onLeaveTypeChange","leaveType","onDescriptionChange","description","onStartDateChange","startDate","onEndDateChange","endDate","onApplyLeaveSubmit","start_date","end_date","name","Leave_Status","info","leave_id","fullname","status","comment","onChangeStatus","backButton","initialState","route","requestdate","from","to","App","leave_description","userData","resp","catch","Navigation_navbar","login","register","dashboard","backbutton","request_leave","Footer_footer","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a5663e12.chunk.js","sourcesContent":[" import React from 'react';\n\n\nconst navbar =({onRouteChange, isSignedIn,first_name})=>{ \n\n   \nconst signOut = () => {\n\n    fetch(`http://localhost:3000/api/user/signOut`,{\n    method: 'Get',\n    headers:{'Content-Type':'application/json',\n    Authorization:window.sessionStorage.getItem('token')}\n})\n    .then(response => response.json())\n    .then(user =>{ \n       if (user.success) {\n         window.sessionStorage.removeItem('token');\n         onRouteChange('SignOut');\n       }\n})\n}\n\n\n\n\n   if(!isSignedIn){\n    return (\n        <div>\n       <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark p-0\">\n     <div className=\"container\">\n      <a href={'home'}  className=\"navbar-brand\">Leave Management System</a>\n      <button className=\"navbar-toggler\"\n      data-toggle=\"collapse\" data-target=\"#navbarHome\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n       <div className=\"collapse navbar-collapse\" id=\"navbarHome\">\n        <ul className=\"navbar-nav ml-auto\">\n \n            <li className=\"nav-item\">\n                <a  onClick={() => onRouteChange('signIn')} className=\"nav-link\">\n                    <i className=\"fa fa-user-circle\"></i> Login\n                </a>\n            </li>\n            <li className=\"nav-item\">\n                <a onClick={() => onRouteChange('register')}  className=\"nav-link\" data-toggle=\"modal\"\n                 data-target=\"#register-modal\">\n                    <i className=\"fa fa-user-circle\"></i> Register\n                </a>\n            </li>\n        </ul>\n       </div>\n    </div>\n  </nav>\n        </div>\n    )\n\n   } else{\n     return (\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark p-0\">\n        <div className=\"container\">\n            <a href=\"{}\" className=\"navbar-brand\">Leave Management System</a>\n            <button className=\"navbar-toggler\" data-toggle=\"collapse\"\n             data-target=\"#navbarNav\" >\n             <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul className=\"navbar-nav\">\n                <li className=\"navbar-items px-2\">\n                  <a href=\"{}\" className=\"nav-link active\">dashboard</a>\n                </li>\n                <li className=\"navbar-item\"></li>\n            </ul>\n               \n            <ul className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item dropdown mr-3\">\n                <a href=\"{}\" className=\"nav-link dropdown-toggle\"\n                data-toggle=\"dropdown\">\n                   <i className=\"fa fa-user\"></i> Welcome {first_name} \n            </a>\n               <div className=\"dropdown-menu\">\n                   <a href=\"{}\" onClick={() => onRouteChange('')}  className=\"dropdown-item\">\n                       <i className=\"fa fa-user-circle\"></i> Profile\n                   </a>\n                   <a href=\"{}\" onClick={() => onRouteChange('applyForLeave')}  className=\"dropdown-item\" data-toggle=\"modal\" data-target=\"#leaveModal\">\n                        <i className=\"fa fa-gear\"></i> Apply for leave\n                    </a>\n               </div>\n                </li>\n                <li className=\"nav-item\">\n                    <a href=\"{}\" onClick={() => signOut()}  className=\"nav-link\">\n                        <i className=\"fa fa-user-times\"></i> Logout\n                    </a>\n                </li>\n            </ul>\n    \n            </div>\n        </div> \n        </nav>\n     )\n   }\n  \n}\n\nexport default navbar;","import React from 'react';\n\nclass Login extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n         signInEmail:'',\n         signInPassword:'',\n         id: 0\n        }\n    }\n   \n    onEmailChange =(event)=>{\n      this.setState({signInEmail:event.target.value});\n    }\n    \n    onPasswordChange =(event)=>{\n        this.setState({signInPassword:event.target.value});\n      }\n    \n     onSubmitSigIn = ()=>{\n        fetch('http://localhost:3000/api/signIn',{\n            method: 'Post',\n            headers:{'Content-Type':'application/json',\n         },\n            body : JSON.stringify({\n                email:this.state.signInEmail,\n                password:this.state.signInPassword\n            }) \n        })\n        .then(response => response.json())\n        .then(user =>{ \n        \n            if (user.success) {\n                window.sessionStorage.setItem('token',user.token); \n               \n                this.props.loadUser(user.data)\n                this.props.onRouteChange('dashboard');\n                //  this.props.onUserLeave(488);\n             } \n             else{\n                this.props.onRouteChange('home');\n            }\n        }) \n     }\n\n\n\n    render (){\n    return (\n         <div className=\"container mt-5\">\n             <div className=\"row\">\n                 <div className=\"col-md-6 mx-auto\">\n                     <div className=\"card\">\n                         <div className=\"card-header\">\n                             <h5>Login</h5>\n                         </div>\n                         <div className=\"card-body\">\n                            \n                             <div className=\"form-group\">\n                              <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                              <input type=\"email\" className=\"form-control\"\n                               id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" \n                               placeholder=\"Enter email\"\n                               onChange={this.onEmailChange} />\n                               <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n                               </div>\n                            <div className=\"form-group\">\n                             <label htmlFor=\"exampleInputPassword1\">Password</label>\n                             <input type=\"password\" \n                             className=\"form-control\"\n                              id=\"exampleInputPassword1\"\n                               placeholder=\"Password\"\n                                onChange={this.onPasswordChange}   \n                               />\n                             </div>\n                                \n                             <button className='btn btn-primary btn-block'\n                              onClick={this.onSubmitSigIn}>Login</button>\n                         </div>\n                     </div>\n                    </div>\n             </div>\n         </div>\n     \n    )\n}\n}\n\nexport default Login;","import React from 'react';\n\nconst footer = ()=>{\n    return(\n        <footer id=\"main-footer\" className=\"bg-dark text-white mt-5 fixed\">\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col\">\n                    <p className=\"lead text-center\">\n                      Copyright &copy; 2018 Ayabonga Booi  \n                    </p>\n                </div>\n            </div>\n        </div>\n       </footer>\n    )\n   \n}\n\nexport default footer;","import React from 'react';\n\nclass  Register extends React.Component {\n    constructor(props){\n     super(props);\n    this.state = {\n     firstName :'',\n     lastName  :'',\n     email     :'',\n     position   :'',\n     password  : '',\n     confirm_password:''\n    }\n    }\n\n    onFirstNameChange =(event)=>{\n        this.setState({firstName:event.target.value});\n      }\n\n      onLastNameChange =(event)=>{\n        this.setState({lastName:event.target.value});\n      }\n\n    onEmailChange =(event)=>{\n        this.setState({email:event.target.value});\n      }\n\n      onPositionChange =(event)=>{\n        this.setState({position:event.target.value});\n      }\n      \n      onPasswordChange =(event)=>{\n          this.setState({password:event.target.value});\n        }\n\n     onConfirmPasswordChange =(event)=>{\n      this.setState({confirm_password:event.target.value});\n     }\n    \n    \n     onRegisterSubmit=()=>{\n       \n     fetch('http://localhost:3000/api/addUser',{\n        method: 'Post',\n        headers:{'Content-Type':'application/json'},\n        body : JSON.stringify({\n            first_name : this.state.firstName,\n            last_name  : this.state.lastName,\n            position   : this.state.position,\n            email      : this.state.email,\n            password   :  this.state.password,\n            password2  : this.state.confirm_password \n        })\n    })\n        .then(response => response.json())\n        .then(user =>{\n               console.log(user);\n                if (user.success) {\n                    this.props.loadUser(user.data[0]);\n                    this.props.onRouteChange('home');\n            }\n             else{\n                this.props.onRouteChange('register');\n            }\n    }) \n     }\n\n render(){\n return (\n    <div className=\"container mt-4\">\n    <div className=\"row\">\n        <div className=\"col-md-6 mx-auto\">\n            <div className=\"card\">\n                <div className=\"card-header\">\n                    <h5>Register</h5>\n                </div>\n                <div className=\"card-body\">\n                    <div className=\"row\">\n                   <div className=\"col-md-6\">\n                    <div className=\"form-group\">\n                      <label htmlFor=\"exampleInputFirst-name1\">First Name</label>\n                         <input type=\"text\" className=\"form-control\" \n                         id=\"exampleInputFirst-name1\" \n                          placeholder=\"Enter First Name\"\n                          onChange={this.onFirstNameChange} \n                        />\n                        </div>\n                   </div>\n                   <div className=\"col-md-6\">\n                           <div className=\"form-group\">\n                                   <label htmlFor=\"exampleInputLast-name1\">Last Name</label>\n                                   <input type=\"text\" className=\"form-control\"\n                                    id=\"exampleInputlast-name1\" \n                                     placeholder=\"Enter Last Name\"\n                                      onChange={this.onLastNameChange} \n                                     />  \n                                 </div>\n                   </div>\n                  <div className=\"col-md-6\">\n                       <div className=\"form-group\">\n                               <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                               <input type=\"email\" className=\"form-control\"\n                                id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"\n                                 placeholder=\"Enter email\"\n                                  onChange={this.onEmailChange} \n                                 />\n                                <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n                             </div>\n                  </div>\n                  <div className=\"col-md-6\">\n                       <div className=\"form-group\">\n                               <label htmlFor=\"category\">Position</label>\n                               <select className=\"form-control\"  onChange={this.onPositionChange} >\n                                 <option value=\"Web Developer\">Web Developer</option>\n                                 <option value=\"Fullstack Developer\">Fullstack Developer</option>\n                                 <option value=\"Tester\">Tester</option>\n                                 <option value=\"Manager\">Manager</option>\n                               </select>\n                              \n                             </div>\n                  </div>\n                  <div className=\"col-md-6\">\n                       <div className=\"form-group\">\n                               <label htmlFor=\"exampleInputPassword1\">Password</label>\n                               <input type=\"password\" className=\"form-control\"\n                                id=\"exampleInputPassword1\" placeholder=\"Password\"\n                                onChange={this.onPasswordChange} \n                                />\n                               </div>\n                  </div>\n                  <div className=\"col-md-6\">\n                       <div className=\"form-group\">\n                               <label htmlFor=\"exampleInputPassword2\">Confirm Password</label>\n                               <input type=\"password\" className=\"form-control\"\n                                id=\"exampleInputPassword2\"\n                                 placeholder=\"Password\"\n                                 onChange={this.onConfirmPasswordChange} \n                                 />\n                               </div>\n                  </div>\n            \n                    </div>\n                     \n                    <button className=\"btn btn-success btn-block\"\n                    onClick={this.onRegisterSubmit}>Register</button>\n                   \n                </div>\n            </div>\n           </div>\n    </div>\n</div>\n )\n}\n}\n\nexport default Register;","import React from 'react';\n\nconst header =() =>{\n      return(\n        <header id=\"main-header\" className=\"py2 bg-primary text-white\">\n        <div className=\"container\">\n        <div className=\"row\">\n            <div className=\"col-md-6\">\n                <h1><i className=\"fa fa-gear\"></i> Dashboard</h1>\n            </div>\n        </div>\n        </div>\n    </header>\n      )\n} \n\nexport default header;\n","import React from 'react';\n\nclass Leave_card extends React.Component{\n  \n    constructor(props){\n        super(props);\n        this.state={\n            leaveTotal:0,\n            rejected:0,\n            applied:0\n\n        }\n    }\n\n componentDidMount(){\n   this.onAvailableLeaves(this.props.id); \n   console.log(this.props.id)\n }\n\n onAvailableLeaves=(user_id)=>{ \n \n    fetch(`http://localhost:3000/api/user/total/leaves/${user_id}`,{\n    method: 'Get',\n    headers:{'Content-Type':'application/json',\n    Authorization:window.sessionStorage.getItem('token')}\n})\n    .then(response => response.json())\n    .then(user =>{  \n     this.setState({leaveTotal:user.data})\n\n     fetch(`http://localhost:3000/api/user/total/applied/leaves/${user_id}`,{\n    method: 'Get',\n    headers:{'Content-Type':'application/json',\n    Authorization:window.sessionStorage.getItem('token')}\n})\n    .then(response => response.json())\n    .then(user =>{  \n     this.setState({applied:user.data[0].count})\n})\n\nfetch(`http://localhost:3000/api/user/total/rejected/${user_id}`,{\n    method: 'Get',\n    headers:{'Content-Type':'application/json',\n    Authorization:window.sessionStorage.getItem('token')}\n})\n    .then(response => response.json())\n    .then(user =>{  \n     this.setState({rejected:user.data[0].count})\n})\n}) \n\n\n\n  }\n\n\n  render(){\n      const {leaveTotal,applied,rejected} = this.state;\n    return (\n        \n        <div className=\"container mt-2\">\n        <div className=\"row\">\n       <div className=\"col-md-3\">\n           <div className=\"card\">\n               <div className=\"card-body\">\n                <h3>Available Leaves</h3>\n\n                <h5 className=\"display4\">\n                  {leaveTotal}\n                  </h5>\n               </div>\n           </div>\n       </div>\n       \n       <div className=\"col-md-3\">\n          <div className=\"card\">\n              <div className=\"card-body\">\n               <h3>Applied Leave</h3>\n               <h5 className=\"display4\">\n                   {applied}\n                 </h5>\n              </div>\n          </div>\n       </div>\n        \n       <div className=\"col-md-3\">\n           <div className=\"card\">\n               <div className=\"card-body\">\n                <h3>Rejected leave</h3>\n                <h5 className=\"display4\">\n                    {rejected}\n                  </h5>\n               </div>\n           </div>\n        </div>\n       \n       </div>\n       </div>\n    )\n}\n}\n\nexport default Leave_card;","import React from 'react';\nimport Header from '../Dashboard_header/dashboard-header'\nimport Leavecard from '../Leave-Card/leave_card'; \n\nclass Dashboard  extends React.Component{\n\n \n\n  componentDidMount(){\n    this.props.onUserLeaves();\n  }\n  \n  onColorChange =(color)=>{\n    switch (color) {\n        case 'Approved':\n            return 'text-success'\n         case 'Rejected':\n         return 'text-danger'\n         case 'Pending':\n         return 'text-warning'\n        default:\n        return 'text-danger'           \n    }\n  }\n\n \n   render(){ \n       const {appliedLeaves ,onViewChange ,position, userId} = this.props;\n    return (\n        <div><Header />\n          {position !==\"Manager\"\n           ?\n           <Leavecard id={userId}/>\n           :\n           <div></div>\n          }\n           \n        <div className=\"container mt-4\">\n        <div className=\"row\">\n            <div className=\"col\">\n                <div className=\"card\">\n                    <div className=\"card-header\">\n                        <h4>Lastest Leave Application</h4>\n                    </div>\n                    <table className=\"table table-striped\">\n                        <thead className=\"thead-inverse\">\n                            <tr>\n                                <th>#</th>\n                                <th>Employee Name</th>\n                                <th>Leave Type</th>\n                                <th>Posting Date</th>\n                                <th>Status</th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                       { appliedLeaves.map((current,i) => {\n                     \n               return      <tr key={i}>\n                             <td>{i+1}</td>\n                              <td>{current.first_name} {current.last_name}</td>\n                             <td>{current.leave_type}</td>\n                             <td>2018/10/09</td>\n                             <td className={this.onColorChange(current.leave_status)}>{current.leave_status}</td>\n                             <td><button  className=\"btn btn-secondary\" \n                               onClick={()=>onViewChange(current)}>\n                            <i className=\"fa fa-angle-double-right\"\n                            \n                            ></i> View\n                            </button></td>\n                             </tr>         \n                        })\n                       \n                        }\n                        </tbody>\n\n                    </table>\n                </div>\n            </div>\n        </div>\n        \n    </div>\n    \n    </div>\n\n    )\n}\n}\n\nexport default Dashboard;","import React from 'react';\n\nclass RequestLeave extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state={\n      leaveType:'',\n      description:'',\n      startDate:'',\n      endDate: ''\n    }\n  }\n  \n  onLeaveTypeChange=(event)=>{\n    this.setState({leaveType:event.target.value});\n  }\n\n  onDescriptionChange=(event)=>{\n    this.setState({description:event.target.value});\n  }\n\n  onStartDateChange=(event)=>{\n    this.setState({startDate:event.target.value});\n  }\n  onEndDateChange=(event)=>{\n    this.setState({endDate:event.target.value});\n  }\n\n  onApplyLeaveSubmit=()=>{\n   console.log(this.state);\n   console.log(this.props.userId)\n    fetch('http://localhost:3000/api/request/leave',{\n      method: 'Post',\n      headers:{'Content-Type':'application/json',\n      Authorization: window.sessionStorage.getItem('token')\n     },\n      body : JSON.stringify({\n          user_id      : this.props.userId,\n          leaveType    : this.state.leaveType,\n          description  : this.state.description,\n          start_date   : this.state.startDate,\n          end_date     : this.state.endDate\n      })\n  })\n      .then(response => response.json())\n      .then(user =>{\n               \n              if (user.success) {\n                this.props.onUserLeaves();\n                // this.props.loadUser(user.data);  \n                this.props.onRouteChange('dashboard');\n          }\n           else{\n              this.props.onRouteChange('dashboard');\n          }\n  })\n  }\nrender(){\n \nreturn (\n    <div className='container mt-1'>\n     <div className=\"row\">\n      <div className=\"col-md-6 mx-auto\">\n       <div className=\"card\">\n        <div className=\"card-header\">\n          <h5>Apply for a leave</h5>\n        </div>\n          <div className=\"card-body\">\n          <div className=\"form-group\">\n                            <label htmlFor=\"category\">Leave Type</label>\n                            <select className=\"form-control\" \n                            onChange={this.onLeaveTypeChange}>\n                              <option value=\"sick leave\">Sick Leave</option>\n                              <option value=\"unpaid leave\">Unpaid Leave</option>\n                              <option value=\"paid leave\">Paid Leave</option>\n                              <option value=\"family leave\">Family Leave</option>\n                            </select>\n                          </div>\n                <div className=\"form-group\">\n                        <label htmlFor=\"body\">Description</label>\n                        <textarea name=\"editor1\" className=\"form-control\"\n                         onChange={this.onDescriptionChange}\n                        ></textarea>\n                      </div>\n                 <div className=\"row\">\n                 <div className=\"col-md-6\">\n                        <div className=\"form-group\">\n                          <label htmlFor=\"start_date\">From</label>\n                             <input type=\"date\" className=\"form-control\" \n                              onChange={this.onStartDateChange}\n                              />\n                         </div>\n                     </div>\n                     <div className=\"col-md-6\">\n                     <div className=\"form-group\">\n                     <label htmlFor=\"end_date\">To</label>\n                     <input type=\"date\" className=\"form-control\" \n                       onChange={this.onEndDateChange}\n                     />\n                     </div>\n                     </div>\n                 </div>\n          </div>\n            <button className=\"btn btn-primary btn-block\" \n            onClick={this.onApplyLeaveSubmit}\n            >Apply</button>\n            <button className=\"btn btn-warning btn-block\">Cancel</button>\n       </div>\n      </div>\n     </div>\n    </div>\n)\n}\n}\n\nexport default RequestLeave;\n\n\n","import React from 'react';\n\nconst Leave_Status =({info,position})=>{\n const {leave_id,fullname,status,comment}=info;\n\nconst onChangeStatus=(id,status)=>{ \n  fetch(`http://localhost:3000/api/update/leave/status/${id}/${status}`,{\n    method: 'Post',\n    headers:{'Content-Type':'application/json',\n    Authorization:window.sessionStorage.getItem('token')}\n})\n    .then(response => response.json())\n    .then(user =>{\n        console.log(user)\n        // this.setState({appliedLeaves:user.data})\n})\n}\nconst onColorChange =(color)=>{\n  switch (color) {\n      case 'Approved':\n          return 'text-success'\n       case 'Rejected':\n       return 'text-danger'\n       case 'Pending':\n       return 'text-warning'\n      default:\n      return 'text-danger'           \n  }\n}\n\n\n\n\nreturn(\n  <div className=\"container mt-5\">\n  <div className=\"row\">\n  <div className=\"col-md-6 mx-auto\">\n       <div className=\"card\">\n        <div className=\"card-header\">\n          <h5>Leave Request</h5>\n        </div>\n          <div className=\"card-body\">\n            <div className=\"mb-3\">\n            <h5 className=\"text-center text-primary\">{fullname}</h5>\n              <h5 className={\" text-center \"+onColorChange(status)}>{status}</h5>\n              <h6 className=\"text-center\">Requested on Friday 18 October 2018</h6>\n            </div>\n            <div className=\"form-group\">\n            <label htmlFor=\"start_date\">Leave request from</label>\n            <h6 className=\"text-center\">18/09/2018</h6>\n            </div>\n            <div className=\"form-group\">\n            <label htmlFor=\"start_date\">Leave request to</label>\n               <h6 className=\"text-center\">20/09/2018</h6>\n            </div>\n\n            <div className=\"form-group\">\n            <label htmlFor=\"start_date\">Employee Comment</label>\n            <p className=\"mx-5\">{comment}</p>\n            </div>\n            { position === \"Manager\"\n               ?\n               <div className=\"mb-3\">\n             <button className=\"btn btn-success btn-inline-block\" \n              onClick={()=>onChangeStatus(leave_id,'Approved')}  >Approve Leave</button>\n             <button className=\"btn btn-danger btn-inline-block float-right m\" \n               onClick={()=>onChangeStatus(leave_id,'Rejected')}   >Decline Leave</button>\n             </div> \n             : \n              status === \"Rejected\" || status === \"Approved\" || status === \"Canceled\"\n              ?\n              <div></div>\n            \n             :\n             <button className=\"btn btn-defualt btn-inline-block float-right\"\n             onClick={()=>onChangeStatus(leave_id,'Canceled')}\n             >Cancel</button>\n            }\n            \n           \n          \n       </div>\n      </div>\n     </div>\n  </div>  \n  </div>\n)\n\n}\n\n\nexport default Leave_Status;\n","import React from 'react';\n\nconst backButton =()=>{\n\n return(\n        <div className=\"container mt-2\">\n         <div className=\"row\">\n          <div className=\"col bg-light m-3 p-2\">\n           <i className='fa fa-arrow-left'> \n            <a href=\"{}\"> Back</a></i>\n          </div>\n         </div>\n        </div>\n    )\n        \n        \n    \n\n}\n\nexport default backButton;","import React, { Component } from 'react';\nimport Navbar from './components/Navigation/navbar';\nimport Login from  './components/Login/login';\nimport Footer from  './components/Footer/footer';\nimport Register from './components/Register/register';\nimport Dashboard from './components/Dashboard/dashboard';\nimport RequestLeave from './components/Request_leave/request_leave';\nimport LeaveStatus from  './components/Leave_status/leave-status';\nimport BackButton  from  './components/BackButton/backbutton';\n\nimport './App.css';\n\n\n\nconst initialState ={\n  route :'home',\n  isSignedIn: false,\n  user:{\n    id: 0,\n    first_name:'',\n    last_name:'',\n    position :'',\n    email:''\n  }\n  ,\n    appliedLeaves:[],\n    info:{\n      leave_id :0,\n      fullname: '',\n      status :'',\n      comment:'',\n      requestdate:'',\n      from:'',\n      to:''}\n}\n\n\nclass App extends Component {\n  constructor (props){\n    super(props);\n  \n     this.state =initialState\n  } \n\n\n  componentDidMount(){\n   \n    const token = window.sessionStorage.getItem('token'); \n    \n     if(token){\n      fetch('http://localhost:3000/api/signin',{\n        method: 'post',\n        headers:{\n          'Content-Type': 'application/json',\n          Authorization:token\n        }\n      }) \n      .then(resp=>resp.json())\n      .then(data=>{ \n        \n        if (data && data.id) {\n          fetch(`http://localhost:3000/api/profile/${data.id}`, {\n            method: 'get',\n            headers: {\n              'Content-Type': 'application/json',\n              Authorization:token\n            }\n        })\n        .then(resp=>resp.json())\n      .then(user=>{ \n          if (user && user.data.id) {\n            this.loadUser(user.data)\n            this.onRouteChange('dashboard');\n          }\n      })\n    }\n      })\n      .catch(console.log)\n     }\n  \n    }\n\n    onViewChange =(data)=>{ \n      console.log(data)\n   this.setState({info:{leave_id:data.id,fullname:data.first_name + \" \" + data.last_name,\n       status:data.leave_status,comment:data.leave_description\n    }})\n  \n   this.onRouteChange('viewLeave');\n  } \n\n\n  loadUser =(user)=>{\n     let userData = user;\n     \n     \n    this.setState({user:{\n    id: userData.id,\n    first_name:userData.first_name,\n    last_name:userData.last_name,\n    position :userData.position,\n    email:userData.email\n    }})\n      this.onUserLeaves()\n  }\n\n  onRouteChange = (route) => {\n    \n    if (route === 'signOut'){\n      this.setState(initialState);\n    } else if(route === 'dashboard'){\n      this.setState({isSignedIn:true});\n    }\n    this.setState({route:route});\n  }\n  \n  onUserLeaves = ()=> {\n     let userId =this.state.user.id; \n     let position = this.state.user.position;\n     if (position !==\"Manager\") {\n      fetch('http://localhost:3000/api/user/applied/leaves/'+userId,{\n        method: 'GET',\n        headers:{'Content-Type':'application/json',\n        Authorization:window.sessionStorage.getItem('token')}\n    })\n        .then(response => response.json())\n        .then(user =>{\n           \n            this.setState({appliedLeaves:user.data})\n    })\n     } else{\n      fetch('http://localhost:3000/api/users/applied/history',{\n        method: 'GET',\n        headers:{'Content-Type':'application/json',\n        Authorization:window.sessionStorage.getItem('token')}\n    })\n        .then(response => response.json())\n        .then(user =>{\n          \n            this.setState({appliedLeaves:user.data})\n    })\n     }\n   \n  }\n \n\n\n  render() {\n    const {route,isSignedIn,user,appliedLeaves,info} = this.state;\n     \n  console.log(this.state);\n    return (\n      <div>  \n      <Navbar onRouteChange={this.onRouteChange} isSignedIn={isSignedIn} \n      first_name={user.first_name} />\n       {route === 'home' \n       ?\n       <div>\n       <Login loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n       </div>\n       : (\n         route ==='register'\n        ?  <div>\n        <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n        </div>\n        : (route ==='dashboard')\n           \n         ?  <div>\n           <Dashboard appliedLeaves={appliedLeaves} \n           onRouteChange={this.onRouteChange} onUserLeaves={this.onUserLeaves} \n           onViewChange={this.onViewChange} position={user.position} userId={user.id}  />\n           </div>\n         \n        : (route === 'applyForLeave') \n        \n        ? <div>\n        <BackButton />\n        <RequestLeave onRouteChange={this.onRouteChange} userId={user.id} onUserLeaves={this.onUserLeaves} />\n        </div>\n        :  (route === 'viewLeave') \n            \n         ?  <div>\n         <BackButton /> \n           <LeaveStatus info={info} position={user.position}/>\n         </div>\n         :     <Login loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n         )\n  \n       }\n      \n       <Footer />\n       </div>\n   \n    )\n\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './css/font-awesome.min.css'\nimport './css/bootstrap.css';\nimport './css/style.css';\n\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}